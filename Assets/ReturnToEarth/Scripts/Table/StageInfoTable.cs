// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System;
using C2TPro;

public static partial class StageInfoTable
{
	public partial class Row
	{
		public int i_index;
		public float f_stageDelay;
		public int i_totalSmallMonster;
		public int i_totalBossMonster;
		public string s_smallMonsterType;
		public string s_mBossMonsterType;
		public string s_bossMonsterType;
		public string s_stageType;
		public int i_rewardCredit;
		public int i_rewardDebries;

	}

	static List<Row> rowList = new List<Row>();
	static bool isLoaded = false;

	public static bool IsLoaded()
	{
		return isLoaded;
	}

    public static void Clear()
    {   
        isLoaded = false;
        rowList.Clear();
    }

	public static List<Row> GetRowList()
	{
        StaticLoad();
		return rowList;
	}

	public static void Load(string csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser.Parse(csv);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			if(grid[i][0].StartsWith("#"))
				continue;	// skip comment

			Row row = new Row();
			row.i_index = string.IsNullOrEmpty(grid[i][0]) ? 0 : Convert.ToInt32(grid[i][0]);
			row.f_stageDelay = string.IsNullOrEmpty(grid[i][1]) ? 0 : Convert.ToSingle(grid[i][1]);
			row.i_totalSmallMonster = string.IsNullOrEmpty(grid[i][2]) ? 0 : Convert.ToInt32(grid[i][2]);
			row.i_totalBossMonster = string.IsNullOrEmpty(grid[i][3]) ? 0 : Convert.ToInt32(grid[i][3]);
			row.s_smallMonsterType = grid[i][4];
			row.s_mBossMonsterType = grid[i][5];
			row.s_bossMonsterType = grid[i][6];
			row.s_stageType = grid[i][7];
			row.i_rewardCredit = string.IsNullOrEmpty(grid[i][8]) ? 0 : Convert.ToInt32(grid[i][8]);
			row.i_rewardDebries = string.IsNullOrEmpty(grid[i][9]) ? 0 : Convert.ToInt32(grid[i][9]);

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public static void StaticLoad()
	{
		if(!isLoaded) 
            Load(Resources.Load<TextAsset>("Table/StageInfo").text);
	}


	public static int NumRows()
	{
        StaticLoad();
		return rowList.Count;
	}

	public static Row GetAt(int i)
	{
        StaticLoad();
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public static Row Find_i_index(int find)
	{
        StaticLoad();
		return rowList.Find(x => x.i_index == find);
	}
	public static List<Row> FindAll_i_index(int find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.i_index == find);
	}
	public static Row Find_f_stageDelay(float find)
	{
        StaticLoad();
		return rowList.Find(x => x.f_stageDelay == find);
	}
	public static List<Row> FindAll_f_stageDelay(float find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.f_stageDelay == find);
	}
	public static Row Find_i_totalSmallMonster(int find)
	{
        StaticLoad();
		return rowList.Find(x => x.i_totalSmallMonster == find);
	}
	public static List<Row> FindAll_i_totalSmallMonster(int find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.i_totalSmallMonster == find);
	}
	public static Row Find_i_totalBossMonster(int find)
	{
        StaticLoad();
		return rowList.Find(x => x.i_totalBossMonster == find);
	}
	public static List<Row> FindAll_i_totalBossMonster(int find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.i_totalBossMonster == find);
	}
	public static Row Find_s_smallMonsterType(string find)
	{
        StaticLoad();
		return rowList.Find(x => x.s_smallMonsterType == find);
	}
	public static List<Row> FindAll_s_smallMonsterType(string find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.s_smallMonsterType == find);
	}
	public static Row Find_s_mBossMonsterType(string find)
	{
        StaticLoad();
		return rowList.Find(x => x.s_mBossMonsterType == find);
	}
	public static List<Row> FindAll_s_mBossMonsterType(string find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.s_mBossMonsterType == find);
	}
	public static Row Find_s_bossMonsterType(string find)
	{
        StaticLoad();
		return rowList.Find(x => x.s_bossMonsterType == find);
	}
	public static List<Row> FindAll_s_bossMonsterType(string find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.s_bossMonsterType == find);
	}
	public static Row Find_s_stageType(string find)
	{
        StaticLoad();
		return rowList.Find(x => x.s_stageType == find);
	}
	public static List<Row> FindAll_s_stageType(string find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.s_stageType == find);
	}
	public static Row Find_i_rewardCredit(int find)
	{
        StaticLoad();
		return rowList.Find(x => x.i_rewardCredit == find);
	}
	public static List<Row> FindAll_i_rewardCredit(int find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.i_rewardCredit == find);
	}
	public static Row Find_i_rewardDebries(int find)
	{
        StaticLoad();
		return rowList.Find(x => x.i_rewardDebries == find);
	}
	public static List<Row> FindAll_i_rewardDebries(int find)
	{
        StaticLoad();
		return rowList.FindAll(x => x.i_rewardDebries == find);
	}

}